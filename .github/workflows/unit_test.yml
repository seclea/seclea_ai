name: Unit Testing

on:
  pull_request:
    branches: [dev]
  workflow_dispatch:
    branches: [dev]

jobs:
  validate:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo - including submodules
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_AUTOMATION }}
          submodules: "recursive"
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  test:
    needs: validate
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pypoetrty
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - name: Checkout repo - including submodules
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_AUTOMATION }}
          submodules: "recursive"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Check for macos and install libomp for Boosting libraries to work
        if: startsWith(matrix.os, 'macOS')
        run: brew install libomp
      - name: Run image
        uses: abatilo/actions-poetry@v2
      - name: Install deps
        run: |
          poetry install
      - name: Activate poetry env
        run: |
          echo "========== [ env activation ]==============
          echo python${{matrix.python-version}}
          poetry env use python${{matrix.python-version}}
      - name: Run tests
        run: |
          poetry install
          poetry env use python${{matrix.python-version}}
          poetry run python3 -m unittest discover
